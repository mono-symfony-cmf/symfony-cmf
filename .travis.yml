language: php

php:
  - 7.1
  - hhvm

sudo: false

addons:
    apt_packages:
        - parallel

matrix:
  include:
    - php: 5.6
      env: SYMFONY_VERSION=2.8.* COMPOSER_FLAGS="--prefer-lowest" SYMFONY_DEPRECATIONS_HELPER=weak
    - php: 7.1
      env: SYMFONY_VERSION=3.3.* DEPS=dev
    - php: 7.0
      env: SYMFONY_VERSION=3.1.*
    - php: 7.1
      env: SYMFONY_VERSION=3.3.* TEST_THEM_ALL=1
  fast_finish: true

git:
    depth: 1

env:
    global:
        - MIN_PHP=5.5.9
        - SYMFONY_PROCESS_PHP_TEST_BINARY=~/.phpenv/versions/5.6/bin/php
cache:
    directories:
        - $HOME/.composer/cache/files
        - .phpunit
        - php-$MIN_PHP

before_install:
    - |
      # General configuration
      stty cols 120
      PHP=$TRAVIS_PHP_VERSION
      [ -d ~/.composer ] || mkdir ~/.composer
      cp .composer/* ~/.composer/
      export PHPUNIT=$(readlink -f ./phpunit)
      export PHPUNIT_X="$PHPUNIT"
      export COMPOSER_UP="composer update --no-progress --no-suggest --ansi $COMPOSER_FLAGS"

      # tfold is a helper to create folded reports
      tfold () {
          title=$1
          fold=$(echo $title | sed -r 's/[^-_A-Za-z\d]+/./g')
          shift
          echo -e "travis_fold:start:$fold\\n\\e[1;34m$title\\e[0m"
          bash -xc "$*" 2>&1 &&
              echo -e "\\e[32mOK\\e[0m $title\\n\\ntravis_fold:end:$fold" ||
              ( echo -e "\\e[41mKO\\e[0m $title\\n" && exit 1 )
      }
      export -f tfold

      # php.ini configuration
      if [[ $PHP = hhvm* ]]; then
          INI=/etc/hhvm/php.ini
      else
          INI=~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini
          phpenv config-rm xdebug.ini || echo "xdebug not available"
      fi
      export COMPOSER_ROOT_VERSION=$SYMFONY_VERSION.x-dev
      COMPONENTS=$(find src -mindepth 3 -type f -name phpunit.xml.dist -printf '%h\n')
      if [[ "$TRAVIS_PHP_VERSION" != "hhvm" ]]; then echo "memory_limit = -1" >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini; fi
      phpenv config-rm xdebug.ini || true
      skip=0

install:
    - |
      # Create local composer packages for each patched components and reference them in composer.json files when cross-testing components
      composer self-update
      if [[ ! $skip ]]; then
          export SYMFONY_DEPRECATIONS_HELPER=weak &&
          cp composer.json composer.json.orig &&
          echo -e '{\n"require":{'"$(grep phpunit-bridge composer.json)"'"php":"*"},"minimum-stability":"dev"}' > composer.json &&
          if [ "$SYMFONY_VERSION" != "" ]; then composer require symfony/symfony:${SYMFONY_VERSION} --no-update; fi
          CHAGEDCOMPONENTS=$(php .github/build-packages.php master $COMPONENTS) &&
          mv composer.json composer.json.phpunit &&
          mv composer.json.orig composer.json
      fi

    - |
      if [[ ! $skip ]]; then ./phpunit install; fi
      # phpinfo
      if [[ ! $PHP = hhvm* ]]; then php -i; else hhvm --php -r 'print_r($_SERVER);print_r(ini_get_all());'; fi

    - |
      # run composer update on main repository
      $COMPOSER_UP
    - |
      run_tests () {
          set -e
          if [[ 1 != $TEST_THEM_ALL ]]; then
            # Test changed components only:
            echo "Changed: $CHAGEDCOMPONENTS\n"
            echo "$CHAGEDCOMPONENTS" | parallel --gnu -j10% "tfold {} 'cd {} && $COMPOSER_UP && $PHPUNIT_X {}'"
          else
            # Test them all
            echo "$COMPONENTS" | parallel --gnu -j10% "tfold {} 'cd {} && $COMPOSER_UP && $PHPUNIT_X {}'"
          fi
      }

script:
    - (run_tests)

notifications:
  irc: "irc.freenode.org#symfony-cmf"
